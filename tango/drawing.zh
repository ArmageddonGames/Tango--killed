// tango.zh alpha 1

// Frame drawing stuff
const int TANGO_DRAW_TILE       = 1;
const int TANGO_DRAW_TILE_TRANS = 2;
const int TANGO_DRAW_RECT       = 3;
const int TANGO_DRAW_RECT_TRANS = 4;
const int TANGO_DRAW_END        = 0;

const int TANGO_TILE_ID     = 1;
const int TANGO_TILE_CSET   = 2;
const int TANGO_TILE_X      = 3;
const int TANGO_TILE_Y      = 4;
const int TANGO_TILE_WIDTH  = 5;
const int TANGO_TILE_HEIGHT = 6;

const int TANGO_RECT_CSET   = 1;
const int TANGO_RECT_COLOR  = 2;
const int TANGO_RECT_X      = 3;
const int TANGO_RECT_Y      = 4;
const int TANGO_RECT_WIDTH  = 5;
const int TANGO_RECT_HEIGHT = 6;

const int __TANGO_SIZEOF_DRAW_DATA = 7;

void __Tango_DrawComplexBackdrop(int backdrop, float x, float y)
{
    int opacity;
    
    for(int baseIndex=0;
        backdrop[baseIndex]!=TANGO_DRAW_END;
        baseIndex+=__TANGO_SIZEOF_DRAW_DATA)
    {
        if(backdrop[baseIndex]<=TANGO_DRAW_TILE_TRANS)
        {
            // Tile or transparent tile
            if(backdrop[baseIndex]==TANGO_DRAW_TILE_TRANS)
                opacity=OP_TRANS;
            else
                opacity=OP_OPAQUE;
            
            Screen->DrawTile(__TANGO_DRAWING_LAYER,
                             x+backdrop[baseIndex+TANGO_TILE_X],
                             y+backdrop[baseIndex+TANGO_TILE_Y],
                             backdrop[baseIndex+TANGO_TILE_ID],
                             backdrop[baseIndex+TANGO_TILE_WIDTH],
                             backdrop[baseIndex+TANGO_TILE_HEIGHT],
                             backdrop[baseIndex+TANGO_TILE_CSET],
                             -1, -1, 0, 0, 0, 0, true, opacity);
        }
        else
        {
            // Rectangle or transparent rectangle
            if(backdrop[baseIndex]==TANGO_DRAW_RECT_TRANS)
                opacity=OP_TRANS;
            else
                opacity=OP_OPAQUE;
            
            Screen->Rectangle(__TANGO_DRAWING_LAYER,
                x+backdrop[baseIndex+TANGO_RECT_X]+1,
                y+backdrop[baseIndex+TANGO_RECT_Y]+1,
                x+backdrop[baseIndex+TANGO_RECT_X]+backdrop[baseIndex+TANGO_RECT_WIDTH]-2,
                y+backdrop[baseIndex+TANGO_RECT_Y]+backdrop[baseIndex+TANGO_RECT_HEIGHT]-2,
                backdrop[baseIndex+TANGO_RECT_CSET]*16+backdrop[baseIndex+TANGO_RECT_COLOR],
                -1, 0, 0, 0, true, opacity);
        }
    }
}

// Draws a single character and returns the width of the character drawn.
// Assumes character is at least 32 (i.e. in the printable character range)
// and that the target bitmap is already set.
int __Tango_PutChar(int character, int font, int x, int y, int cset, int color)
{
    if(character!=TANGO_CHAR_SPACE) // Spaces don't need drawn...
    {
        if(font[__TANGO_FONT_TYPE]==TANGO_FONT_BUILTIN ||
           font[__TANGO_FONT_TYPE]==TANGO_FONT_BUILTIN_EXTENDED)
        {
            if(character<=__TANGO_FONT_BUILTIN_MAX)
            {
                // Valid character in built-in font
                Screen->DrawCharacter(0, x, y, font[__TANGO_FONT_ID], cset*16+color, -1, -1, -1, character, OP_OPAQUE);
            }
            else if(font[__TANGO_FONT_TYPE]==TANGO_FONT_BUILTIN_EXTENDED)
            {
                // Extended character
                int tile=font[__TANGO_FONT_EXTENSION_TILE]+character-__TANGO_FONT_EXTENDED_START;
                Screen->FastTile(0, x, y, tile, cset, OP_OPAQUE);
            }
        }
        else // Custom font
        {
            int tile=font[__TANGO_FONT_START_TILE]+character+__TANGO_FONT_ASCII_TO_CUSTOM;
            Screen->FastTile(0, x, y, tile, cset, OP_OPAQUE);
        }
    }
    
    return __Tango_GetCharacterWidth(character, font);
}

void __Tango_DrawToScreen(int stringID, int dataStart)
{
    // Draw the backdrop first
    int styleStart=__Tango_StringData[dataStart+__TANGO_DATA_STYLE]*__TANGO_SIZEOF_STYLE;
    int backdrop=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_TYPE];
    int screenX=__Tango_StringData[dataStart+__TANGO_DATA_SCREEN_X];
    int screenY=__Tango_StringData[dataStart+__TANGO_DATA_SCREEN_Y];
    
    if(backdrop==TANGO_BACKDROP_COLOR ||
       backdrop==TANGO_BACKDROP_COLOR_TRANS)
    {
        int color=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_CSET]*16+
                  __Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_COLOR];
        int width=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_WIDTH];
        int height=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_HEIGHT];
        int opacity;
        
        if(backdrop==TANGO_BACKDROP_COLOR)
            opacity=OP_OPAQUE;
        else
            opacity=OP_TRANS;
            
        Screen->Rectangle(__TANGO_DRAWING_LAYER, screenX+1, screenY+1,
                          screenX+width-2, screenY+height-2, color,
                          -1, 0, 0, 0, true, opacity);
    }
    else if(backdrop==TANGO_BACKDROP_IMAGE ||
            backdrop==TANGO_BACKDROP_IMAGE_TRANS)
    {
        int tile=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_TILE];
        int cset=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_CSET];
        int width=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_WIDTH];
        int height=__Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_HEIGHT];
        int opacity;
        
        if(backdrop==TANGO_BACKDROP_IMAGE)
            opacity=OP_OPAQUE;
        else
            opacity=OP_TRANS;
        
        Screen->DrawTile(__TANGO_DRAWING_LAYER, screenX, screenY,
                         tile, width, height, cset,
                         -1, -1, 0, 0, 0, 0, true, opacity);
    }
    else if(backdrop==TANGO_BACKDROP_COMPLEX)
    {
        __Tango_DrawComplexBackdrop(
            __Tango_Styles[styleStart+TANGO_STYLE_BACKDROP_DATA],
            screenX, screenY);
    }
    
    
    // Then draw the string
    
    int stringX=screenX+__Tango_Styles[styleStart+TANGO_STYLE_TEXT_X];
    int stringY=screenY+__Tango_Styles[styleStart+TANGO_STYLE_TEXT_Y];
    
    int bitmapX=__TANGO_STRING_DEFS[stringID*__TANGO_SIZEOF_STRDEF+__TANGO_STRDEF_X];
    int bitmapY=__TANGO_STRING_DEFS[stringID*__TANGO_SIZEOF_STRDEF+__TANGO_STRDEF_Y]+
                    __Tango_StringData[dataStart+__TANGO_DATA_OFFSET];
    
    int width=__Tango_Styles[styleStart+TANGO_STYLE_TEXT_WIDTH];
    int height=__Tango_Styles[styleStart+TANGO_STYLE_TEXT_HEIGHT];
    
    if(__Tango_StringData[dataStart+__TANGO_DATA_STATE]==__TANGO_STATE_ADVANCING)
    {
        int offset=__Tango_StringData[dataStart+__TANGO_DATA_COUNTER];
        bitmapY+=offset;
        height-=offset;
    }
    
    Screen->DrawBitmap(__TANGO_DRAWING_LAYER,
                       __TANGO_BITMAP,
                       bitmapX, bitmapY, width, height,
                       stringX, stringY, width, height,
                       0, true);
    
    // The the "More..." indicator
    if(__Tango_StringData[dataStart+__TANGO_DATA_STATE]==__TANGO_STATE_FINISHED)
    {
        int combo=__Tango_Styles[styleStart+TANGO_STYLE_MORE_COMBO];
        if(combo<=0)
            return;
        int cset=__Tango_Styles[styleStart+TANGO_STYLE_MORE_CSET];
        int x=screenX+__Tango_Styles[styleStart+TANGO_STYLE_MORE_X];
        int y=screenY+__Tango_Styles[styleStart+TANGO_STYLE_MORE_Y];
        
    	Screen->FastCombo(__TANGO_DRAWING_LAYER, x, y, combo, cset, OP_OPAQUE);
    }
}


void __Tango_DrawMenuCursor()
{
    int pos=__Tango_Data[__TANGO_IDX_MENU_CURSOR]-1;
    int dataStart=__TANGO_IDX_CHOICE_DATA+pos*__TANGO_SIZEOF_CHOICE;
    int styleStart=__Tango_Data[__TANGO_IDX_MENU_STYLE];
    int x=__Tango_Data[dataStart+__TANGO_CHOICE_X];
    int y=__Tango_Data[dataStart+__TANGO_CHOICE_Y];
    
    Screen->DrawCombo(__TANGO_DRAWING_LAYER,
                      __Tango_Data[dataStart+__TANGO_CHOICE_X],
                      __Tango_Data[dataStart+__TANGO_CHOICE_Y],
                      __Tango_Styles[styleStart+TANGO_STYLE_CURSOR_COMBO],
                      1, 1,
                      __Tango_Styles[styleStart+TANGO_STYLE_CURSOR_CSET],
                      -1, -1, 0, 0, 0, 0, 0, true, OP_OPAQUE);
}

void __Tango_ClearStringBitmap(int stringID)
{
    int defStart=stringID*__TANGO_SIZEOF_STRDEF;
    int x=__TANGO_STRING_DEFS[defStart+__TANGO_STRDEF_X];
    int y=__TANGO_STRING_DEFS[defStart+__TANGO_STRDEF_Y];
    int width=__TANGO_STRING_DEFS[defStart+__TANGO_STRDEF_WIDTH];
    int height=__TANGO_STRING_DEFS[defStart+__TANGO_STRDEF_HEIGHT];
    
    Screen->SetRenderTarget(__TANGO_BITMAP);
    Screen->Rectangle(0, x+1, y+1, x+width-2, y+height-2,
                      0, -1, 0, 0, 0, true, OP_OPAQUE);
}
